name: Main branch

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PRIVATE_MVN_REGISTRY_TOKEN: ${{ secrets.GITLAB_PKG_REGISTRY_TOKEN }}
  PRIVATE_MVN_REGISTRY_URL: ${{ secrets.GITLAB_MAVEN_REGISTRY_URL }}
  PRIVATE_DOCKER_REGISTRY_URL: ${{ secrets.GITLAB_DOCKER_REGISTRY_URL }}

jobs:
  build:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout badges branch
        uses: actions/checkout@v3
        with:
          ref: badges
          path: badges

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven

      - name: Setup depends
        run: |
          pip install yq

      - name: Setup mvn settings.yml
        uses: s4u/maven-settings-action@v2.5.0
        with:
          servers: '[{"id": "private-registry","configuration": {"httpHeaders": {"property": {"name": "PRIVATE-TOKEN","value": "${{ env.PRIVATE_MVN_REGISTRY_TOKEN }}"}}}}]'

      - name: Build
        run: mvn --batch-mode --update-snapshots clean package --file ./pom.xml -DskipTests

      - name: Test
        run: mvn --batch-mode --update-snapshots clean verify --file ./pom.xml

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cf-metadata-core
          path: core/target/*.jar

      - name: Generate Jacoco Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: badges
          generate-branches-badge: true
          jacoco-csv-file: core/target/site/jacoco/jacoco.csv
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branches = ${{ steps.jacoco.outputs.branches }}"
      - name: Commit and push badges
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          cd badges
          if [[ `git status --porcelain *.svg` ]]; then
            git config --global user.name 'github-actions'
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git add *.svg
            git commit -m "chore: Autogenerated JaCoCo coverage badge" *.svg
            git push
          fi
      - name: Upload Jacoco coverage report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: core/target/site/jacoco/

      - name: Publish
        run: |
          xq \
            --arg REPOSITORY_ID private-registry \
            --arg REPOSITORY_NAME "${GITHUB_REPOSITORY}" \
            --arg REPOSITORY_URL "${{ env.PRIVATE_MVN_REGISTRY_URL }}" \
            '.project.distributionManagement = { "repository": { "id": $REPOSITORY_ID, "name": $REPOSITORY_NAME , "url": $REPOSITORY_URL } }' \
            pom.xml \
            --xml-output > pom.xml.mod && mv pom.xml.mod pom.xml
          
          mvn --batch-mode --update-snapshots deploy -DskipTests
